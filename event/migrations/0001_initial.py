# Generated by Django 3.2.7 on 2021-09-30 22:59

import common.models.picture
from django.db import migrations, models
import django.db.models.deletion
import django_resized.forms
import event.models.event
import event.models.event_agenda
import tinymce.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enabled', models.BooleanField(default=True, help_text='Define si este registro estará habilitado', verbose_name='Registro habilitado')),
                ('order', models.PositiveIntegerField(blank=True, default=0, help_text='Índice númerico de ordenamiento de este registro', null=True, verbose_name='índice de ordenamiento')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('version', models.PositiveIntegerField(default=1)),
                ('description', tinymce.models.HTMLField(blank=True, default='Descripción', null=True)),
                ('href', models.URLField(blank=True, null=True)),
                ('img_picture', django_resized.forms.ResizedImageField(blank=True, crop=None, force_format='JPEG', keep_meta=True, null=True, quality=85, size=[512, 512], upload_to=common.models.picture.picture)),
                ('title', models.CharField(max_length=64)),
                ('slug', models.SlugField(blank=True, max_length=64, null=True, unique=True)),
                ('private', models.BooleanField(default=False, verbose_name='Evento privado')),
                ('img_logo', django_resized.forms.ResizedImageField(crop=None, force_format='JPEG', help_text='Logo del evento', keep_meta=True, null=True, quality=100, size=[256, 256], upload_to=event.models.event.event_pictures, verbose_name='Logo')),
                ('img_cover', django_resized.forms.ResizedImageField(blank=True, crop=None, force_format='JPEG', help_text='Imágen Cover del evento', keep_meta=True, null=True, quality=90, size=[1920, 1080], upload_to=event.models.event.event_pictures, verbose_name='Imágen Cover')),
                ('short_description', models.CharField(blank=True, help_text='Descripción corta (90 carácteres)', max_length=90, null=True, verbose_name='Descripción corta del evento')),
                ('address', models.CharField(max_length=256, verbose_name='Dirección del evento')),
                ('map', django_resized.forms.ResizedImageField(blank=True, crop=None, force_format='JPEG', help_text='Mapa del evento', keep_meta=True, null=True, quality=90, size=[512, 512], upload_to=event.models.event.event_pictures, verbose_name='Mapa')),
                ('video_live_link', models.URLField(blank=True, null=True, verbose_name='Link del video en vivo')),
                ('facebook_link', models.URLField(blank=True, help_text='Link del Facebook del Stand', max_length=256, null=True, verbose_name='Facebook del Stand')),
                ('twitter_link', models.URLField(blank=True, help_text='Link del Twitter del Stand', null=True, verbose_name='Twitter del Stand')),
                ('instagram_link', models.URLField(blank=True, help_text='Link del Instagram del Stand', null=True, verbose_name='Instagram del Stand')),
                ('youtube_link', models.URLField(blank=True, help_text='Link del Youtube del Stand', null=True, verbose_name='Youtube del Stand')),
            ],
            options={
                'verbose_name': 'Evento',
                'verbose_name_plural': 'Eventos',
            },
        ),
        migrations.CreateModel(
            name='EventClassification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enabled', models.BooleanField(default=True, help_text='Define si este registro estará habilitado', verbose_name='Registro habilitado')),
                ('order', models.PositiveIntegerField(blank=True, default=0, help_text='Índice númerico de ordenamiento de este registro', null=True, verbose_name='índice de ordenamiento')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('version', models.PositiveIntegerField(default=1)),
                ('description', tinymce.models.HTMLField(blank=True, default='Descripción', null=True)),
                ('href', models.URLField(blank=True, null=True)),
                ('img_picture', django_resized.forms.ResizedImageField(blank=True, crop=None, force_format='JPEG', keep_meta=True, null=True, quality=85, size=[512, 512], upload_to=common.models.picture.picture)),
                ('title', models.CharField(max_length=64)),
                ('slug', models.SlugField(blank=True, max_length=64, null=True, unique=True)),
            ],
            options={
                'verbose_name': 'Categoría del evento',
                'verbose_name_plural': 'Categorías de los eventos',
            },
        ),
        migrations.CreateModel(
            name='Expositor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enabled', models.BooleanField(default=True, help_text='Define si este registro estará habilitado', verbose_name='Registro habilitado')),
                ('order', models.PositiveIntegerField(blank=True, default=0, help_text='Índice númerico de ordenamiento de este registro', null=True, verbose_name='índice de ordenamiento')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('version', models.PositiveIntegerField(default=1)),
                ('description', tinymce.models.HTMLField(blank=True, default='Descripción', null=True)),
                ('href', models.URLField(blank=True, null=True)),
                ('img_picture', django_resized.forms.ResizedImageField(blank=True, crop=None, force_format='JPEG', keep_meta=True, null=True, quality=85, size=[512, 512], upload_to=common.models.picture.picture)),
                ('title', models.CharField(max_length=64)),
                ('short_description', models.CharField(blank=True, help_text='Descripción corta (90 carácteres)', max_length=90, null=True, verbose_name='Descripción corta del evento')),
                ('link', models.URLField(blank=True, help_text='Link del expositor', max_length=256, null=True, verbose_name='Link del expositor')),
            ],
            options={
                'verbose_name': 'Expositor',
                'verbose_name_plural': 'Expositores',
            },
        ),
        migrations.CreateModel(
            name='EventPicture',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enabled', models.BooleanField(default=True, help_text='Define si este registro estará habilitado', verbose_name='Registro habilitado')),
                ('order', models.PositiveIntegerField(blank=True, default=0, help_text='Índice númerico de ordenamiento de este registro', null=True, verbose_name='índice de ordenamiento')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('version', models.PositiveIntegerField(default=1)),
                ('title', models.CharField(blank=True, max_length=64, null=True)),
                ('description', tinymce.models.HTMLField(blank=True, default='Descripción', null=True)),
                ('href', models.URLField(blank=True, null=True)),
                ('img_picture', django_resized.forms.ResizedImageField(blank=True, crop=None, force_format='JPEG', keep_meta=True, null=True, quality=85, size=[512, 512], upload_to=common.models.picture.picture)),
                ('event', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='event.event', verbose_name='Evento')),
            ],
            options={
                'verbose_name': 'Foto de Stand',
                'verbose_name_plural': 'Fotos de Stands',
            },
        ),
        migrations.CreateModel(
            name='EventAgenda',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enabled', models.BooleanField(default=True, help_text='Define si este registro estará habilitado', verbose_name='Registro habilitado')),
                ('order', models.PositiveIntegerField(blank=True, default=0, help_text='Índice númerico de ordenamiento de este registro', null=True, verbose_name='índice de ordenamiento')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('version', models.PositiveIntegerField(default=1)),
                ('description', tinymce.models.HTMLField(blank=True, default='Descripción', null=True)),
                ('href', models.URLField(blank=True, null=True)),
                ('img_picture', django_resized.forms.ResizedImageField(blank=True, crop=None, force_format='JPEG', keep_meta=True, null=True, quality=85, size=[512, 512], upload_to=common.models.picture.picture)),
                ('title', models.CharField(max_length=64)),
                ('date', models.DateField(verbose_name='Fecha')),
                ('starting_time', models.TimeField(verbose_name='Inicio de exposicion')),
                ('ending_time', models.TimeField(verbose_name='Inicio de exposicion')),
                ('map', django_resized.forms.ResizedImageField(blank=True, crop=None, force_format='JPEG', help_text='Mapa de la exposicion', keep_meta=True, null=True, quality=90, size=[512, 512], upload_to=event.models.event_agenda.event_pictures, verbose_name='Mapa')),
                ('video_live_link', models.URLField(blank=True, null=True, verbose_name='Link del video en vivo')),
                ('event', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='event.event', verbose_name='Evento')),
                ('expositor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='event.expositor', verbose_name='Expositor')),
                ('pictures', models.ManyToManyField(blank=True, help_text='Fotos de la exposicion', related_name='event_agenda_pictures', to='event.EventPicture', verbose_name='Fotos de la exposicion')),
            ],
            options={
                'verbose_name': 'Evento',
                'verbose_name_plural': 'Eventos',
            },
        ),
        migrations.AddField(
            model_name='event',
            name='classification',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='event.eventclassification', verbose_name='Clasificacion'),
        ),
        migrations.AddField(
            model_name='event',
            name='pictures',
            field=models.ManyToManyField(blank=True, help_text='Fotos del evento', related_name='event_pictures', to='event.EventPicture', verbose_name='Fotos'),
        ),
    ]
